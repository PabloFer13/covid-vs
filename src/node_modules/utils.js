import Papa from 'papaparse';

export async function serialize(dataSource,dayZero) {
    const res = await fetch(dataSource);
    const csv = await res.text();
    const json = formatCSV(csv.trim(),dayZero);
    return json;
}

export function serializeSelected(countries,selectedList){
    return countries.map(c => {
        let selectedIndex = selectedList.findIndex(label => label === c.name);
        let clone = {...c};
        clone.selectedIndex = selectedIndex;
        clone.color = assignColor(selectedIndex).foreground;
        clone.bgGolor = assignColor(selectedIndex).background;
        return clone;
    })
}

export function assignColor(index){
    const pallete = ['#EE4266','#2A1E5C','#0A0F0D','#C4CBCA','#3CBBB1','#182825','#016FB9','#22AED1','#6D8EA0','#AFA98D'];    
    const pallete2 = ['#FBDCE3','#D8D6E1','#D2D3D3','#F4F5F5','#DBF2F0','#969D9B','#8BBDDF','#9ADAEA','#BCCBD3','#DAD7CB'];
    const color = index >= 0 ? {foreground:pallete[index % pallete.length],'background':pallete2[index % pallete2.length]} : {foreground:'#555',background:'#555'};
    return color;
}

function formatCSV(csv,dayZero) {
    const json = Papa.parse(csv, { header: true }).data;    
    return json
        .filter(row => row['Province/State'] === '')
        .map(row => {
            const data = Object.values(row).splice(4);
            const labels = Object.keys(row).splice(4);
            return {
                name: row['Country/Region'],
                lat: row.Lat,
                long: row.Long,
                data: data,
                labels: labels,
                dayZero: data.findIndex(cases => cases > dayZero),
            }
        });
}

